<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Matt Trask</title>
    <description>My travels from the start to now.</description>
    <link>http://matthewtrask.net/</link>
    <atom:link href="http://matthewtrask.net/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 02 Jan 2016 20:28:14 -0500</pubDate>
    <lastBuildDate>Sat, 02 Jan 2016 20:28:14 -0500</lastBuildDate>
    <generator>Jekyll v3.0.1</generator>
    
      
      <item>
        <title>Setting up a new Mac for development</title>
        <description>&lt;h1&gt;Macs for development&lt;/h1&gt;
</description>
        
          <description>&lt;h1&gt;Macs for development&lt;/h1&gt;
</description>
        
        <pubDate>Sun, 29 Nov 2015 00:00:00 -0500</pubDate>
        <link>http://matthewtrask.net/blog/setting-up-new-mac-for-devlopment/</link>
        <guid isPermaLink="true">http://matthewtrask.net/blog/setting-up-new-mac-for-devlopment/</guid>
        
        <category>Zsh,</category>
        
        <category>Bash,</category>
        
        <category>Composer,</category>
        
        <category>Set</category>
        
        <category>Up</category>
        
        
      </item>
      
    
      
      <item>
        <title>Let&#39;s build a website, pt 1.</title>
        <description>&lt;h2&gt;Composing a great website&lt;/h2&gt;

&lt;p&gt;It&amp;#39;s no secret that creating a website has undergone a transition right? First it was basic HTML, CSS, some fun Javascript and there you go. Then, as Jeffery Way says &lt;a href=&quot;https://youtu.be/mDotS5BDqRM?t=11m6s&quot;&gt;here&lt;/a&gt;, its just not those three anymore. Now, as developers, we need a lot of things. Tools like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;HTML&lt;br&gt;&lt;/li&gt;
&lt;li&gt;CSS -&amp;gt; Bootstrap/Foundation&lt;/li&gt;
&lt;li&gt;Javascript&lt;/li&gt;
&lt;li&gt;jQuery &lt;/li&gt;
&lt;li&gt;Angular, Vue, React, Ember or whatever cool framework it is now.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But then we need someway to validate data and parse it on a server so:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;PHP&lt;/li&gt;
&lt;li&gt;Ruby&lt;/li&gt;
&lt;li&gt;Python&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;How will we save our data? Well we cant just keep it in a session. So&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;SQL&lt;/li&gt;
&lt;li&gt;MongoDB&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But it doesnt stop there! As Jeffery keeps on going, theres so many tools out there just to build a simple website. So whats needed, and whats not? Well, that is completely up to you! So lets talk about what we are doing. Our project, which Im documenting, is going to be a rebuild of &lt;a href=&quot;https://atlantaphp.org&quot;&gt;AtlantaPHP.org&lt;/a&gt;. &lt;/p&gt;

&lt;h2&gt;What do we need to start?&lt;/h2&gt;

&lt;p&gt;Well, if you truly want to follow along, you will need the following tools:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://vagrantup.com&quot;&gt;vagrant&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com&quot;&gt;github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https:getcomposer.org&quot;&gt;composer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://box.scotch.io&quot;&gt;Scotch Box&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These 4 tools will be the base of my project. As an aside, there are a few other developers working on this project, but Im leading the project. So once you get Vagrant up, lets build our composer.json file. Take a look!&lt;/p&gt;

&lt;pre&gt;
    &lt;code class=&#39;javascript&#39; style=&quot;font-size: 12px&quot;&gt;
    {
        &quot;name&quot;: &quot;Atlanta/AtlantaPHP&quot;, 
        &quot;description&quot;: &quot;PHP User Group for Atlanta, GA. Meets first Thursday of every month at Atlantic Station&quot;,
        &quot;type&quot;: &quot;Website&quot;,
        &quot;license&quot;: &quot;MIT&quot;,
        &quot;authors&quot;: [
            {   
            &quot;name&quot;:&quot;Matt Trask&quot;, 
            &quot;email&quot;: &quot;mjftrask@gmail.com&quot;
            }
        ],
        &quot;require&quot;: {
            &quot;slim/slim&quot;: &quot;^3.0@beta&quot;,
            &quot;slim/views&quot;: &quot;0.1.3&quot;,
            &quot;slim/pdo&quot;: &quot;1.8.*&quot;, 
            &quot;twig/twig&quot;: &quot;1.23.*&quot;, 
            &quot;slim/logger&quot;: &quot;0.1.*&quot;,
            &quot;ircmaxell/password-compat&quot;: &quot;1.0.4&quot;,
            &quot;phpmailer/phpmailer&quot;: &quot;5.2.14&quot;,
            &quot;guzzlehttp/guzzle&quot;: &quot;6.1.*&quot;,
            &quot;nesbot/carbon&quot;: &quot;1.14.*&quot;,
            &quot;dms/meetup-api-client&quot;: &quot;2.0.*&quot;
        },
        &quot;require-dev&quot;: {
            &quot;phpunit/phpunit&quot;: &quot;4.8.18&quot;,
            &quot;phploc/phploc&quot;: &quot;*&quot;,
            &quot;fzaninotto/faker&quot;: &quot;1.5.*&quot;,
            &quot;squizlabs/php_codesniffer&quot;: &quot;2.3.*&quot;
        }
    }
    &lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;So lets break down this file so you know whats going on. And it can be a good intro into Composer. &lt;/p&gt;

&lt;p&gt;Composer first and foremost is a PHP Package Manager. I put in the packages I want, with constrants to the version numbers. If you like at the first require statement, these are all what I want to build the website.I am asking Composer to find and pull in the &lt;a href=&quot;https://slimframework.com&quot;&gt;Slim&lt;/a&gt; framework at version 3. Now I have to pull it in different cause technically Slim v3 isnt in production yet, but stable enough to use. &lt;/p&gt;

&lt;p&gt;Going back a step, if you look at the file, its all based around JSON Arrays. The top part is just general meta data about the project. Name of the project, who is working on it, how can they be contacted, etc. If this were a package I was publishing, I would be adding keywords as well as requirements like PHP version numbers, so that way people know what is needed for my library to run. Right now, we are just doing that should someone come to the project and want to know who to talk to. Which is me, currently. &lt;/p&gt;

&lt;h2&gt;SemVer&lt;/h2&gt;

&lt;p&gt;This is a good point to bring up something called Semantic Versioning. If you look at the numbers in my composer.json file, they all follow the pattern of &amp;#39;1.2.3&amp;#39; where each numbered spot has a posiion. &lt;/p&gt;

&lt;h3&gt;1 means Major&lt;/h3&gt;

&lt;p&gt;The first place, the 1 in my example, represents a major package. When you hit 1, 2, 3, 4, etc you are releaseing code that in the package that is not backwards compatibilty and will be breaking to versions under it. So if i release Slim 4.x, you shoul expect it will not play well with Slim 3.x, or Slim 2.x
Major releases are usually annouced, and with some fanfare. I see people start a watch for the next Laravel major relase. Its kind of a big deal. &lt;/p&gt;

&lt;h3&gt;2 means Minor&lt;/h3&gt;

&lt;p&gt;Minor patches or changes are less violent in terms of API changes. These patches, the x.1.x changes, will allow for backwards compatibility. Usually these types of fixes are features that couldnt be built into the initial 1.x.x release, so the developers bundle it up into a x.1.x release to make sure the feature is going to work the way its expected. &lt;/p&gt;

&lt;h3&gt;3 means Bugs&lt;/h3&gt;

&lt;p&gt;Just like is says, a x.x.1 release is just a bug fix. Misspelt a function, or the function is returning n+1, well thats a quick bug fix will not affect the code you are bringing in. These are the most frequent changes you will run into as a developer. &lt;/p&gt;

&lt;p&gt;So anyways, with Composer, we have a few types of options to do. We can hard lock our dependencies:
&lt;pre&gt;
    &lt;code type=&quot;javascript&quot;&gt;
        &amp;quot;require&amp;quot;: {
            &amp;quot;slim/views&amp;quot;: &amp;quot;0.1.3&amp;quot;
        }
    &lt;/code&gt;
&lt;/pre&gt;&lt;/p&gt;

&lt;p&gt;which means that no matter how many times I run &lt;/p&gt;

&lt;pre&gt;
    &lt;code type=&quot;javascript&quot;&gt;
        /var/www/public composer install
    &lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;the code for &amp;#39;Slim/Views&amp;#39; will always return 0.1.3. as the version and codebase I will use to create a templating engine in Slim. &lt;/p&gt;

&lt;h2&gt;Hard Locking can be dangerous&lt;/h2&gt;

&lt;p&gt;While some apps, and some people, hard lock the composer dependencies, for this project, and the amount of code distribution, we will want to allow for a little variance in the code. If Im writing a project on my own, and I know what I want, I will hard lock the dependencies. But for right now, its ok to allow variance. Generally, I will hard lock to the minor version, just to be safe, but bug fixes can come in randomly. &lt;/p&gt;

&lt;p&gt;Other ways you can pull in code, is with the &amp;#39;^&amp;#39; symbol and &amp;#39;~&amp;#39; symbol. Both are more soft dependency types, allowing for code base fluctuation. &lt;/p&gt;

&lt;h2&gt;Require-Dev&lt;/h2&gt;

&lt;p&gt;The next, and one the most important parts of the composer.json is whats in the &amp;quot;require-dev&amp;quot; array. If you look, I have:
&lt;pre&gt;
    &lt;code type=&quot;javascript&quot;&gt;
        &amp;quot;require-dev&amp;quot;: {
            &amp;quot;phpunit/phpunit&amp;quot;: &amp;quot;4.8.18&amp;quot;,
            &amp;quot;phploc/phploc&amp;quot;: &amp;quot;&lt;em&gt;&amp;quot;,
            &amp;quot;fzaninotto/faker&amp;quot;: &amp;quot;1.5.&lt;/em&gt;&amp;quot;,
            &amp;quot;squizlabs/php_codesniffer&amp;quot;: &amp;quot;2.3.*&amp;quot;
        }
    &lt;/code&gt;
&lt;/pre&gt;&lt;/p&gt;

&lt;p&gt;These allow me to test my code (phpunit), see the amount of code/methods/classes in the code (phploc), a way to fake data to test my code, (faker) and PHP_codesniffer to lint the PHP I wil write for the project. These libraries are used in the dev stage only, and not to be pushed to the server. But generally these code libraries are invaluable to developers.  &lt;/p&gt;

&lt;p&gt;According to Jordi Baggiano, who wrote Composer, require-dev is installed on composer update only, unless explicitely stated on the install command:&lt;/p&gt;

&lt;blockquote style=&quot;font-size: 14px&quot;&gt;
The update command now installs dev requirements by default. This makes sense since you should only run it on dev environments. No more update --dev, the dev flag is now implicit and if you really don&#39;t want these packages installed you can use update --no-dev instead.


The install command on the other hand remains the same. It does not install dev dependencies by default, and it will actually remove them if they were previously installed and you run it without --dev. Again this makes sense since in production you should only run install to get the last verified state (stored in composer.lock) of your dependencies installed. 
&lt;/blockquote&gt;

&lt;h2&gt;Now what?&lt;/h2&gt;

&lt;p&gt;Well, once you run &amp;quot;composer install&amp;quot;, it will pull in all the code of the composer file, and set up the libraries in the callable &amp;#39;vendor&amp;#39; directory. From there we can use the specific libraries for the methods we need them for. &lt;/p&gt;

&lt;p&gt;Before you run composer install, you wont have a Vendor directory. Then you should run composer update to get the require-dev packages. Afterwards, it will appear. If you open it up, you will see a lot of separate folders with packages that you have now pulled in. Open them up and explore a bit! We will start with bringing in SlimPHP to our project. That will come next time!&lt;/p&gt;

&lt;h2&gt;Next time.&lt;/h2&gt;

&lt;p&gt;Part 2 will explore building a base Slim PHP project. We will talk briefly on Slim, Twig, a little more composer stuff, such as the lock file, and how to distribute code via Github to a team. We will also look at NPM and Bower.io for front end package management as well. Stay Tuned! &lt;/p&gt;
</description>
        
          <description>&lt;h2&gt;Composing a great website&lt;/h2&gt;
</description>
        
        <pubDate>Wed, 11 Nov 2015 00:00:00 -0500</pubDate>
        <link>http://matthewtrask.net/blog/Lets-Build-A-Site/</link>
        <guid isPermaLink="true">http://matthewtrask.net/blog/Lets-Build-A-Site/</guid>
        
        <category>Composer,</category>
        
        <category>AtlantaPHP,</category>
        
        <category>PHP,</category>
        
        <category>SlimPHP,</category>
        
        <category>Packagist,</category>
        
        <category>Getting</category>
        
        <category>Started</category>
        
        
      </item>
      
    
      
      <item>
        <title>Technology, inclusion and how to do better</title>
        <description>&lt;h2&gt;Tear down these walls.&lt;/h2&gt;

&lt;p&gt;Over the weekend, I took apart in something special, something unique. And I have a unique perspective for a number of reasons. And to really give you the idea, I have to take you back to last year. &lt;/p&gt;

&lt;p&gt;In America exists a program called &lt;a href=&quot;http://www.codeforamerica.org&quot;&gt;Code for America&lt;/a&gt;. Their mission is to open up the government with technology. Its simple, everyone has a smartphone, tablet, and/or computer. Hell, some of us now have fancy watches that let us know we got a text message before everyone else. The government, however, has decided that Internet Explore 8 and Windows XP (now well past security updates, and was E.O.L&amp;#39;d about a year ago) are the way to go. But thats neither here or there. Instead, Code For America, and the local groups, have taken it upon themselves to open up the government with current technology. Through this group, Code For Atlanta, a friend in the non profit world reached out and sent me an invite for the first ever &lt;a href=&quot;http://goodiehack.com&quot;&gt;Goodie Hack&lt;/a&gt;. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Goodie Hack is an intense and high energy event where techies and non-techies form teams to brainstorm and develop technical solutions to problems in under-served communities relative to economic development, education, heath, and safety.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That sounds awesome right? I though so too! Well, long story short, I was the only white guy there. Only white person really. But you know what? Even though the hack was for the underserved and minority communities, there was never a sense of not belonging. So I got my laptop out, and started helping in anyway I could. Back then I barely knew what I was doing, so I didnt help much, but I created a name for myself with the group, and got invited to more hacks. My team managed to win a hack &lt;a href=&quot;http://amplify4good.org&quot;&gt;Amplify 4 Good&lt;/a&gt;, the parent company of Goodie Hack, hosted at General Assembly in Ponce City Market. &lt;/p&gt;

&lt;h2&gt;Personalized Emails and being asked to help&lt;/h2&gt;

&lt;p&gt;Generally when a hack is coming up, I get an email from &lt;a href=&quot;https://twitter.com/joeydigital&quot;&gt;Joey Womack&lt;/a&gt;, who leads the Amplify 4 Good group, mentioning the need for volunteers and mentors for the students at the various hacks they host. This time, I got a personalized call, which could have been the same for everyone, but I felt special and took to the calling. Sending an email back saying Im in, I get signed up and attend the tutoring class. &lt;/p&gt;

&lt;p&gt;The tutoring class had some amazing thinkers, all aimed at empowering youth to go to college and look at Computer Science and Coding as available options. One thing stood out the most, &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We should aim to teach the students that not every programmer and coder out there is a nerdy white guy sitting in the corner not talking to everyone.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Wow. &lt;/p&gt;

&lt;p&gt;Those are powerful words. Are they right? Well maybe. Im not disagreeing with the fact that &lt;em&gt;a lot&lt;/em&gt; of programmers and devs I know are white. Im not disagreeing that diversity lacks. Im not the only one who thinks that either. Look on twitter, there are tons of developers who think the same way. Call for papers for conferences routinely ask for women to submit. Groups like PHP Women, Girl Develop It, Black Girls Code and Women Who Code help forward the cause. But yet, there are still people in the industry who have to be told to not be a dick to someone with different colored skin or something else. Its wrong. &lt;/p&gt;

&lt;h2&gt;The hackathon itself&lt;/h2&gt;

&lt;p&gt;If you know me, you know I value my down time. I gave up a huge chunk this weekend to help out. It was worth it. Being the only white person there is a huge push out of the comfort zone, but it didnt take long for it to just be another day of helping out. The students themselves came armed with questions and ideas. Personally I was shocked with how open they were to ideas, and how they didnt feel any reason was a reason to stop their efforts. This sentiment was echoed from many mentors who I talked with. It was an amazing experience to be apart of. &lt;/p&gt;

&lt;p&gt;What I thought the students enjoyed most was gathering their data. It took some pushing on our part, but they took a liking to going out and talking to their peers and elders. So much that my mentoring partner, Monet, and I had to walk fast to keep up to their curiousity. They came back energized. It was awesome. &lt;/p&gt;

&lt;h2&gt;Day 2&lt;/h2&gt;

&lt;p&gt;Day 2 was the hardest bit. Kids came in tired, we came in tired. Starbucks couldnt get my drink size right. Venti means as much as possible, not 20 ounces of coffee. Seriously. But it was crunch time, and we pushed our kids to get the most out of them. One thing a student mentioned was their interest in coding. &lt;/p&gt;

&lt;p&gt;I had him sit next to me, and with some simple Javascript commands in the console, completely blew his mind. Who know &lt;/p&gt;

&lt;p&gt;&lt;code&gt;alert(&amp;#39;hello, world!&amp;#39;);&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;would take a kid down the road of learning to code? So what is the next logical step? Have them help us build a webpage. &lt;/p&gt;

&lt;p&gt;For some reason, the same kid had a mild obsession with the Hawaii stickers on my laptop. So we built a simple page around the island of Kauai. Then Monet suggested we build a site for our group. Simple! &lt;/p&gt;

&lt;p&gt;With the students in tow, I set out with a simple idea, utilizing &lt;a href=&quot;https://html5boilerplate.com&quot;&gt;HTML 5 Boilerplate&lt;/a&gt; to skeleton the project, &lt;a href=&quot;materializecss.com&quot;&gt;MaterializeCSS&lt;/a&gt; for that lovely Android design feel, and set to work, with three students helping me out at every step. They got to write some basic HTML and CSS, and then I set to hosting the site.&lt;/p&gt;

&lt;h2&gt;Ill pay you to propagate the DNS now&lt;/h2&gt;

&lt;p&gt;No one ever told me it usually takes 48 hours to propagate DNS. Maybe cause I use Digital Ocean, and they are awesome and I dont deal with that shit. Namecheap, who I think is the best registrar out there, let me buy a domain for 8 bucks. Rad! But then there was a glitch and the whole payment process seemed messed up. Which is explains why the DNS didnt fold over to Digital Ocean like I wanted. Frustrated, and not wanting to let the kids down, I set out to set up hosting via Namecheap. Shouldnt hard right, &lt;em&gt;right&lt;/em&gt;? Well, cause of the glitch, Namecheap was having a hard time placing the domain in a DNS zone, which is why Digital Ocean wasnt accepting it either. I was on chat support for an hour, literally up until 5 minutes before we presented. I was hoping, praying, wishing and everything in between to get this to work. The last thing I wanted to do was let down the students. &lt;/p&gt;

&lt;p&gt;Finally, as we were walking over, I got confirmation that the DNS propagated, and I was good. Unfortunately, the FTP service I had wasnt working, so I had to manually upload the files via the cPanel as we walked to the presentation. Luckily it worked just the way we wanted. &lt;/p&gt;

&lt;h2&gt;On to the Finals&lt;/h2&gt;

&lt;p&gt;The finals judges were some big names in the start up community. The biggest was &lt;a href=&quot;https://twitter.com/MrDavidJohns&quot;&gt;David Johns&lt;/a&gt;. if you dont know, he is an advisor to President Obama about education initiatives. Having him there was a huge thing for the students. When we found out our team made it to the finals, Monet and I were nervous and excited. However the group did amazing. Mr. Johns summed up our group perfectly with this&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;quot;We went beyond the basics and created a website&amp;quot; #MicDrop #TeachTheBabies #LevelTheCodingField #LPFIHactivist #Ed &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Our group did everything we could have hoped for. They came up with an awesome idea, pushed through the tough times, and came out the other side stronger and empowered to learn more. Although they didnt win the money, they definitely were winners in my book for coming together, working hard and putting on a great presentation in under 48 hours. &lt;/p&gt;

&lt;h2&gt;Takeaways&lt;/h2&gt;

&lt;p&gt;Sitting at home now, I cant help but think about everything that happened. Its funny that as the sole white mentor, no one was outwardly stand offish to me. We were there working on the same goal, and everyone was working great together. Mentors joked, the students had fun, and hopefully some of them are looking up how to code now. Im sure their parents are already googling ways to be more involved with them.&lt;/p&gt;

&lt;p&gt;You should never judge someone for anything. A book cover can only tell you so much. People wear ther hearts on their sleeves, but hide the scars deep underneath. Everyone: white, black, Asian, short, tall, male and female; has faced some sort of tough time. But to discount someone based on their skin color is the easiest way to be labelled an absolute tool bag. &lt;/p&gt;

&lt;p&gt;I learned a lot this weekend, came out with some awesome stories, and I look forward to continuing to help empower youth of all ages and walks of life to challenge the system and do something more. &lt;/p&gt;

&lt;p&gt;Special thanks to &lt;a href=&quot;twitter.com/morehouse&quot;&gt;Morehouse&lt;/a&gt; for hosting the event, &lt;a href=&quot;https://twitter.com/engijen&quot;&gt;Jennifer Arguello&lt;/a&gt; for being the driving force to excellence, and everyone else who joined in to help make the weekend a huge success!&lt;/p&gt;
</description>
        
          <description>&lt;h2&gt;Tear down these walls.&lt;/h2&gt;
</description>
        
        <pubDate>Sun, 27 Sep 2015 00:00:00 -0400</pubDate>
        <link>http://matthewtrask.net/blog/preconceived-notions-are-bad/</link>
        <guid isPermaLink="true">http://matthewtrask.net/blog/preconceived-notions-are-bad/</guid>
        
        <category>Coding,</category>
        
        <category>Technology,</category>
        
        <category>Inclusion</category>
        
        
      </item>
      
    
      
      <item>
        <title>On Community</title>
        <description>&lt;h1&gt;The PHP Community&lt;/h1&gt;

&lt;p&gt;A few weeks ago, members of the PHP community were up in arms over a divisive issue. The issue? It was the always popular, debated framework Laravel. Of course the tweet, which is an awful mode of communication of ideas, sparked the debate which got personal fast. It spread to Reddit, which is the bastion of cool headedness and reasonable thought. Do I need the sarcasm tag there? &lt;/p&gt;

&lt;p&gt;Luckily it ended a day later with Taylor Otwell and Anthony Ferrera agreeing to discuss the tweet sent by Anthony in a podcast. So thats a huge win for everyone. But while the community has these dark days, where can you find some awesomeness in the community? Better yet, how can you be involved?&lt;/p&gt;

&lt;h2&gt;The User Group&lt;/h2&gt;

&lt;p&gt;The user group is &lt;em&gt;the&lt;/em&gt; place to be in terms of interacting with the community. Most major cities have a user group, and they all run in a simple fashion. There is a period of conversation amongst users, generally friends, about work or projects. Food can be provided, sometimes beer, and then the group gets going. At &lt;a href=&quot;http://atlantaphp.org&quot;&gt;AtlantaPHP&lt;/a&gt; we have a mini talk. Can be about anything, but usually its someone testing a talk or idea, or showing off a project they think others will use. Then the big talk, which is more about concepts of programming and PHP. I&amp;#39;ve been fortunate enough to see a few good talks, with plenty to come.&lt;/p&gt;

&lt;p&gt;One thing I notice with newer developers is a sense of fear. Part of our mission at &lt;a href=&quot;http://lampcamp.guru&quot;&gt;LAMP Camp&lt;/a&gt; is getting these developers out in front of people to meet others. But you need to make the effort. Developers are people too, same as CTO&amp;#39;s, CEO&amp;#39;s and others. Introduce yourself, let them ask questions. Especially if you are apart of a program, or just learning. I know for me, my first time was a little nervewracking, but being with my boss and fellow coworkers allowed me to break out of my shell and get involved. In fact, I&amp;#39;ll be giving a talk next week at AtlantaPHP. Unfortunately, or fortunately, some people arent close to a user group, so what can you do about it? Well there is a few things. &lt;/p&gt;

&lt;h2&gt;The Virtual Hallway&lt;/h2&gt;

&lt;p&gt;The hallway track, and now the viritual hallway, is a concept from the conferences that happen all year. While you are going from one talk to another, you stumble into vendors and other developers in the hallway talking and showing off a project or some knowledge. Enter &lt;a href=&quot;https://twitter.com/coderabbi&quot;&gt;@coderabbi&lt;/a&gt; and the rest of IRC. I mentioned @coderabbi cause his room on IRC is #coderabbi - &amp;quot;The Virtual Hallway&amp;quot;. But his is not the only one. A few active ones are #phpc, #phpmentoring and #slimphp. These are rooms I get into first thing in the morning, and just linger. I can contribute when I want, start conversations, offer input or ask for advice. Its great. Just this morning I was getting advice about &lt;a href=&quot;https://slimframework.com&quot;&gt;SlimPHP&lt;/a&gt; and how to use the Twig templates. All because I asked, and made myself involved. Its easy to register a nickname, and all you need to do is say &amp;quot;good morning&amp;quot;. &lt;/p&gt;

&lt;h2&gt;NomadPHP&lt;/h2&gt;

&lt;p&gt;Another great outlet, started by PHP&amp;#39;s cheerleader himself, &lt;a href=&quot;https://twitter.com/calevans&quot;&gt;Cal Evans&lt;/a&gt;, is NomadPHP.It&amp;#39;s slated to be for the developer without a user group, its more of an event for anyone who wants to be. Featuring two videos a month and an IRC room(#nomadPHP), its an easy way to learn from the comfort of home or at the office. We watched one video last week and put it on the projector so everyone could learn a little. For $20 a month, its one of the best ways to be involved. So why arent you doing it yet?&lt;/p&gt;

&lt;h2&gt;Twitter&lt;/h2&gt;

&lt;p&gt;The last way, and a way a lot of people are already involved with, is Twitter. Following other developers allows me access to their blogs, and comments on different concepts of programming. &lt;a href=&quot;https://twitter.com/philsturgeon&quot;&gt;Phil Sturgeon&lt;/a&gt; routinely sends tweet that gave valuable insight to the PHP community. Same with &lt;a href=&quot;https://twitter.com/ramsey&quot;&gt;Ben Ramsey&lt;/a&gt;. Its a constant information stream that is worth the effort to hop on Twitter and check it out everyday. I use Twitter so much its essentially replaced Facebook for me.  &lt;/p&gt;

&lt;p&gt;Some others to follow include &lt;a href=&quot;https://twitter.com/joepferguson&quot;&gt;Joe Ferguson&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/elazar&quot;&gt;Matthew Turland&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/ambassadorawsum&quot;&gt;Amanda Folson&lt;/a&gt;, &lt;a href=&quot;@ircmaxell&quot;&gt;Anthony Ferrera&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/grumpyprogrammer&quot;&gt;Chris Hartjes&lt;/a&gt; and so many more. Cal Evans keeps a running &lt;a href=&quot;https://twitter.com/CalEvans/lists/phpeople&quot;&gt;list&lt;/a&gt; on his twitter, its worth running through it and just following everyone. &lt;/p&gt;

&lt;h2&gt;Now what?&lt;/h2&gt;

&lt;p&gt;Go out! Be involved! Meetup.com and search for whatever language you want to be involved with. Look for what groups are desiring comments on things, look at github.com for open source projects. Comment on those threads, read them and go out and be ready to be apart of the community. I made the choice to be apart of the PHP community and because of it, I have made some awesome new friends, drinking buddies, and a list of peers I know I can ask for honest advice from. Thats something I wouldn&amp;#39;t change for the world.&lt;/p&gt;
</description>
        
          <description>&lt;h1&gt;The PHP Community&lt;/h1&gt;

&lt;p&gt;A few weeks ago, members of the PHP community were up in arms over a divisive issue. The issue? It was the always popular, debated framework Laravel. Of course the tweet, which is an awful mode of communication of ideas, sparked the debate which got personal fast. It spread to Reddit, which is the bastion of cool headedness and reasonable thought. Do I need the sarcasm tag there? &lt;/p&gt;
</description>
        
        <pubDate>Tue, 25 Aug 2015 00:00:00 -0400</pubDate>
        <link>http://matthewtrask.net/blog/community/</link>
        <guid isPermaLink="true">http://matthewtrask.net/blog/community/</guid>
        
        <category>Community,</category>
        
        <category>PHP,</category>
        
        <category>Lets</category>
        
        <category>Be</category>
        
        <category>Friends</category>
        
        
      </item>
      
    
      
      <item>
        <title>Tech Stack</title>
        <description>&lt;h1&gt;How I build apps and sites&lt;/h1&gt;

&lt;p&gt;I work at LAMP Camp, and since most of the people there are learning, one question I get alot
is what tools do I use? And its an interesting question, because as of late, Ive been changing
my mind and wondering what could be the best way to use the tools I use. Anyways, here is a run
down. Keep an eye on this, cause I will be changing the post as I mess around with new tools. Lets
treat this as if I just bought a new machine, and I want to set it up for development.&lt;/p&gt;

&lt;h2&gt;Machine&lt;/h2&gt;

&lt;p&gt;First and foremost, I am a Mac guy. I dont live and die with every decision they make, but
they make good computers. Its a 2011 Macbook Pro, with 16 gigs or ram and 120 gig SSD. The SSD was
the best decision I have made. Super fast, it sped my computer up and helped my workflow. Lately, however,
Im not overly thrilled that Apple is soldering the ram and hard drives into the machine. Purely a business
move to get more revenue, but still sucks. One trick I do like to do is remove the programs from the dock.
It helps me keep track of what is open, and keeps the dock small and less distracting.&lt;/p&gt;

&lt;p&gt;Now, I do have a Linux machine too, running a distro called ElementaryOS. They got some flack for
trying to charge for their distro, and while I cant blame them for trying to make a living, it was
kind of a dick move.&lt;/p&gt;

&lt;h2&gt;Computer Programs&lt;/h2&gt;

&lt;p&gt;Theres a few Mac specific programs I use to really optimize how I work. First thing I get is
&lt;a href=&quot;http://brew.sh/&quot;&gt;Homebrew&lt;/a&gt;. It&amp;#39;s &lt;em&gt;the&lt;/em&gt; package manager for a Mac. To browse packages, check out this &lt;a href=&quot;http://braumeister.org/&quot;&gt;page&lt;/a&gt;. As you can see, theres Apache, Python, PHP, and others that you may want or need.&lt;/p&gt;

&lt;p&gt;After I set up Homebrew, I get a version of &lt;a href=&quot;iterm2.com&quot;&gt;iTerm&lt;/a&gt;. It has a ton of awesome features that help speed
things up for me. As a PHP developer, I spend a lot of time in the command line, and iTerm has some features I can&amp;#39;t live
without anymore. Split screen is fantastic, and I hot key it on the &amp;#39;~&amp;#39; key. To aid in the terminal, and to make it a little
less bland, I grab a copy of &lt;a href=&quot;http://ohmyz.sh/&quot;&gt;Oh My Zsh&lt;/a&gt;. It has a ton of plugins you can call upon, and it the color scheme
helps keep it from getting dull after hours of looking at the terminal. Truly a godsend in my opinion.&lt;/p&gt;

&lt;p&gt;Anpther app that is awesome is &lt;a href=&quot;https://kapeli.com/dash&quot;&gt;Dash&lt;/a&gt;. Dash allows me to download any language&amp;#39;s api documents and read them offline. When I took a trip to Maui a few months ago, I used it to code some PHP while in the air without Wifi. Sidenote, its an 8 hour flight, thats a cash cow in terms of internet usage fees. Why cant American Airlines offer wifi on the flights to Maui?!&lt;/p&gt;

&lt;p&gt;The last thing I get specific to the Mac, is &lt;a href=&quot;http://www.sequelpro.com/&quot;&gt;Sequel Pro&lt;/a&gt;. Have you ever worked with command line MySQL or even worse, PHPMyAdmin. Yea, this solves the headaches. Its clean, fast, easy to use, allows for SSH tunnels for connections and an easy way to export tables to keep work up to date.&lt;/p&gt;

&lt;p&gt;Outside of these, I get Pomodoro Time from the app store, Evernote for note taking, Spotify for music.&lt;/p&gt;

&lt;h2&gt;Development Specific Tools&lt;/h2&gt;

&lt;p&gt;As a PHP Developer, there are a few awesome things that I need in order to maximize my workflow.&lt;/p&gt;

&lt;p&gt;First, is a text editor. And for that, its hard to beat &lt;a href=&quot;atom.io&quot;&gt;Atom&lt;/a&gt;. Its my favorite word, free, and very customizable. I&amp;#39;ll download it, and then get plugin support for Twig and LinterPHP for all of the linting tools out there. PHP Codesniffer is awesome to use, I highly recommend it. Clean code is good code. You can also get a plugin that will let you see PHPUnit test results in the text editor.&lt;/p&gt;

&lt;p&gt;If you are looking for something more powerful, its hard not to recomment &lt;a href=&quot;jetbrains.com&quot;&gt;PHPStorm&lt;/a&gt;. The license may seem steep, but honestly, everything that it offers is unrivaled. PHPUnit support, Vagrant support, Git support, code completion and error checking just to name a few. I absolutely love it. But I only try to use it when Im plugged into power cause it can cause your battery to die off quickly.&lt;/p&gt;

&lt;h2&gt;Local Development&lt;/h2&gt;

&lt;p&gt;For local development, it is hard to beat &lt;a href=&quot;http://vagrantup.com&quot;&gt;vagrant&lt;/a&gt;. Vagrant, along with &lt;a href=&quot;virtualbox.org&quot;&gt;VirtualBox&lt;/a&gt; make for a great team. Vagrant allows quick access to virtual machines. Super helpful if you are working on a distributed team and need to have everyone on the same server enviornment, or want to have some fun learning Linux without blowing up a computer. Vagrant allows you to configure the VM as you want. If you want CentOS, MySQL, Ruby, PHP, and Node then you just add it to a bootstrap.sh file and once you build your vagrantfile, you run the shell file and it will install everything. There are already a lot of pre-made boxes out there, but making it yourself wouldn&amp;#39;t hurt at all. We use Vagrant at work and I use it at home. I cant tell you how awesome it is. Doesnt require the internet either. I put EVERYTHING on my vagrant instance. Git, Composer, Node and all my files. No more cluttering up my computer with tons of unneeded files. Instead, this keeps it nice and neat. I pass the vagrantfile to Github as well, so if someone wants to do a pull request, they have the enviornment I am using as well. Makes checking pull requests so much easier. &lt;/p&gt;

&lt;h2&gt;Front End&lt;/h2&gt;

&lt;p&gt;If Composer makes back end package management easy, NPM and Bower make Front End that much easier too. If I want Bootstrap, Bower install bootstrap, if I want Gulp (hell yea I do!), then npm install gulp and everything else I need related to Gulp. It makes life so much easier. I can spin up a project in an instant with Bower and Composer, rather then hunting around for 8 different website repos to get the code I want to make my projects. &lt;/p&gt;

&lt;p&gt;Comments or questions?&lt;/p&gt;
</description>
        
          <description>&lt;h1&gt;How I build apps and sites&lt;/h1&gt;
</description>
        
        <pubDate>Sat, 25 Jul 2015 00:00:00 -0400</pubDate>
        <link>http://matthewtrask.net/blog/Tech-Stack/</link>
        <guid isPermaLink="true">http://matthewtrask.net/blog/Tech-Stack/</guid>
        
        <category>PHP,</category>
        
        <category>Tools,</category>
        
        <category>Beginnings,</category>
        
        <category>APIs,</category>
        
        <category>frameworks</category>
        
        
      </item>
      
    
      
      <item>
        <title>OOP &amp; Composer and PHP, oh my!</title>
        <description>&lt;p&gt;When you get into coding and development, everything seems so foreign. OOP, MVC,
MVVM, MV*, JSON, API, and XML. Let alone when a new person sees Angular, Node,
Laravel, Django, Rails or Sass. So what is it all, and how can someone who is new
to the game make sense of this all? Lets start from the ground up.&lt;/p&gt;

&lt;h1&gt;Starting out&lt;/h1&gt;

&lt;p&gt;One big question friends have asked me is where to start? Theres tons of places online
that will help you start learning how to write code. I started on Codecademy, and
its a good starting point. But will you code the next AirBnB? No, you will not. Will
you be able to build something? Absolutely. Its all about what you do &lt;em&gt;outside&lt;/em&gt; of
the Codecademy.com cirriculm. Thats the key! And its amazing how many people have
yet to figure this out. Ive seen people go to /r/learnprogramming or /r/webdev and say
that Codecademy.com isnt working for them. They say that teamtreehouse.com was great to
start, but now they are stuck. But why are they stuck? Is it cause the videos do not
go very deep into web development? Or is it that people arent being creative enough
with that they have learned over the course of a video series. In the time I have spent
working in this industry, that has been the biggest issue coming around. Not pushing deep
enough while learning.&lt;/p&gt;

&lt;h1&gt;After Codecademy&lt;/h1&gt;

&lt;p&gt;So you&amp;#39;ve done some work with Codecademy, and you think you can build a page, that&amp;#39;s great!
But what now?&lt;/p&gt;

&lt;p&gt;You build something! Anything! Build yourself a simple website. It doesnt need to be great,
but its a great place to work. When you are ready, then you can buy the domain and the hosting.
Until then, just practice. The thing with Codecademy or Teamtreehouse is that you feel comfortable
in their setting. Its a crutch. If you type something wrong during an exercise, a warning will appear
and you will know that you messed something up. In the real world, you aren&amp;#39;t that fortunate.&lt;/p&gt;

&lt;p&gt;However, after practicing, you begin to start recognizes things that are not working, and tips to make things
work better! So what are you waiting for? Code something!&lt;/p&gt;
</description>
        
          <description>&lt;p&gt;When you get into coding and development, everything seems so foreign. OOP, MVC,
MVVM, MV*, JSON, API, and XML. Let alone when a new person sees Angular, Node,
Laravel, Django, Rails or Sass. So what is it all, and how can someone who is new
to the game make sense of this all? Lets start from the ground up.&lt;/p&gt;
</description>
        
        <pubDate>Sun, 21 Jun 2015 00:00:00 -0400</pubDate>
        <link>http://matthewtrask.net/blog/oop-composer-oh-my/</link>
        <guid isPermaLink="true">http://matthewtrask.net/blog/oop-composer-oh-my/</guid>
        
        <category>Tools,</category>
        
        <category>PHP,</category>
        
        <category>OOP</category>
        
        
      </item>
      
    
      
      <item>
        <title>Hello World</title>
        <description>&lt;p&gt;&lt;p class=&quot;intro&quot;&gt;This is my first blog post, and I hope its a good one. I&amp;#39;m writing this for a few reasons.&lt;/p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2&gt;Reasons&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Get more involved with the community&lt;/li&gt;
&lt;li&gt;Help beginners&lt;/li&gt;
&lt;li&gt;Allow me to learn more topics&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I called this post &amp;quot;Hello World&amp;quot;, because as a programmer learning a new language, its generally considered a good
benchmark to have your code return &amp;quot;Hello World&amp;quot;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hello World!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1&gt;But who is this?&lt;/h1&gt;

&lt;p&gt;Im Matt, Im a self taught PHP Developer. Im a supporter of open source software,
as well as working to make the government more open. I contribute to groups like
Code for Atlanta, Code for Nashville and Code for Hawaii. I do what I can to stay
involved with projects that will make me a better developer, and I love turning
around and helping new developers come up and become better developers themselves.&lt;/p&gt;

&lt;p&gt;Outside of PHP, I love the craft beer scene in Atlanta. Ever since I was a bartender
at Taco Mac, I was hooked on awesome beers. Im a Red Sox fan, but not a bandwagon fan.
My family is from Boston, so I was taught/endoctrinated early on. Chelsea is my
football/soccer team and I do too much fantasy football to really cheer for a team.&lt;/p&gt;

&lt;p&gt;So thats me. Theres a lot more abut me, but thats a good overview. Im sure new posts
will come that will show off more things like my tech stack, what I am working on,
and what I hope to learn soon.&lt;/p&gt;
</description>
        
          <description>&lt;p&gt;&lt;p class=&quot;intro&quot;&gt;This is my first blog post, and I hope its a good one. I&amp;#39;m writing this for a few reasons.&lt;/p&gt;&lt;br /&gt;&lt;/p&gt;
</description>
        
        <pubDate>Mon, 15 Jun 2015 00:00:00 -0400</pubDate>
        <link>http://matthewtrask.net/blog/hello-world/</link>
        <guid isPermaLink="true">http://matthewtrask.net/blog/hello-world/</guid>
        
        <category>Hello</category>
        
        <category>World,</category>
        
        <category>PHP,</category>
        
        <category>Beginnings</category>
        
        
      </item>
      
    
  </channel>
</rss>
